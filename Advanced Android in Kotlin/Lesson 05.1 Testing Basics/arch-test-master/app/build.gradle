apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.example.android.architecture.blueprints.master"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {

    // App dependencies
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
}

/*
[Robolectric] WARN: Android SDK 29 requires Java 9 (have Java 8). Tests won't be run on SDK 29 unless explicitly requested.
Downloading from maven
Downloading: org/robolectric/android-all/9-robolectric-4913185-2/android-all-9-robolectric-4913185-2.pom from repository sonatype at https://oss.sonatype.org/content/groups/public/
Transferring 2K from sonatype
Downloading: org/robolectric/android-all/9-robolectric-4913185-2/android-all-9-robolectric-4913185-2.jar from repository sonatype at https://oss.sonatype.org/content/groups/public/
Transferring 118099K from sonatype
[Robolectric] com.example.android.architecture.blueprints.todoapp.addedittask.AddEditTaskFragmentTest.validTask_navigatesBack: sdk=28; resources=BINARY
Called loadFromPath(/system/framework/framework-res.apk, true); mode=binary sdk=28
[Robolectric] com.example.android.architecture.blueprints.todoapp.addedittask.AddEditTaskFragmentTest.emptyTask_isNotSaved: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.addedittask.AddEditTaskFragmentTest.validTask_isSaved: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.insertTaskAndGetById: sdk=28; resources=BINARY
Called loadFromPath(/system/framework/framework-res.apk, true); mode=binary sdk=28
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.updateTaskAndGetById: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.updateCompletedAndGetById: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.deleteTaskByIdAndGettingTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.deleteCompletedTasksAndGettingTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.insertTaskReplacesOnConflict: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.insertTaskAndGetTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksDaoTest.deleteTasksAndGettingTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.activateTask_retrievedTaskIsActive: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.completeTask_retrievedTaskIsComplete: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.getTasks_retrieveSavedTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.saveTask_retrievesTask: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.deleteAllTasks_emptyListOfRetrievedTask: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.data.source.local.TasksLocalDataSourceTest.clearCompletedTask_taskNotRetrievable: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.statistics.StatisticsFragmentTest.tasks_showsNonEmptyMessage: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.taskdetail.TaskDetailFragmentTest.completedTaskDetails_DisplayedInUi: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.taskdetail.TaskDetailFragmentTest.activeTaskDetails_DisplayedInUi: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.noTasks_ActiveTasksFilter_AddTaskViewNotVisible: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.markTaskAsActive: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.displayCompletedTask: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.deleteOneTask: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.showCompletedTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.clearCompletedTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.markTaskAsComplete: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.noTasks_AllTasksFilter_AddTaskViewVisible: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.displayActiveTask: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.showAllTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.clickAddTaskButton_navigateToAddEditFragment: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.showActiveTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.deleteOneOfTwoTasks: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.displayTask_whenRepositoryHasData: sdk=28; resources=BINARY
[Robolectric] com.example.android.architecture.blueprints.todoapp.tasks.TasksFragmentTest.noTasks_CompletedTasksFilter_AddTaskViewNotVisible: sdk=28; resources=BINARY

 */