plugins {
    id 'com.android.application'
    id 'kotlin-android'
   // id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"  // 15

}

android {
    namespace 'com.example.android.devbyteviewer'
    compileSdk 33  // Android 13

    defaultConfig {
        applicationId "com.example.android.devbyteviewer"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
       /* javaCompileOptions {
               annotationProcessorOptions {
                   //[WARN] Incremental annotation processing requested,
                   // but support is disabled because the following processors are not incremental:
                   // androidx.room.RoomProcessor (DYNAMIC).
                   arguments = ["room.incremental" : "true"]
               }
        }*/
    }

    buildTypes {
        release {
            minifyEnabled true
            //minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

//    androidExtensions {
//        experimental = true
//    }
}

dependencies {
    implementation 'com.google.android.material:material:1.9.0-alpha02'  // 1.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"  // AS

    // Support libraries
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Joda time library for dealing with time
    implementation "joda-time:joda-time:$version_joda"

    // ViewModel and LiveData (arch components)
    //implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"

    // Logging
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Glide for images
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$version_work"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}