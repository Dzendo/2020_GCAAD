type: theory
files:
- name: src/LazySyntax.kt
  visible: true
  text: |-
    // LazyInitialization/LazySyntax.kt
    package lazyinitialization

    val unused: String by lazy {
      println("Initializing 'unused'")
      "'unused' initialization value"
    }

    val used: String by lazy {
      println("Initializing 'used'")
      "'used' initialization value"
    }

    fun main() {
      println(used)
    }
    /* Output:
    Initializing 'used'
    'used' initialization value
    */
  learner_created: false
- name: src/LazyInt.kt
  visible: true
  text: |-
    // LazyInitialization/LazyInt.kt

    class LazyInt(val init: () -> Int) {
      private var helper: Int? = null
      val value: Int
        get() {
          if (helper == null)
            helper = init()
          return helper!!
        }
    }

    fun compute(i: Int): Int {
      println("Computing $i")
      return i
    }

    fun main() {
      val lazyInt = LazyInt { compute(5) }
      println("LazyInt Constructed")
      println("Access 'value' 2x:")
      println(lazyInt.value)
      println(lazyInt.value)
    }
    /* Output:
    LazyInt Constructed
    Access 'value' 2x:
    Computing 5
    5
    5
    */
  learner_created: false
- name: src/PropertyOptions.kt
  visible: true
  text: |-
    // LazyInitialization/PropertyOptions.kt
    package lazyinitialization

    fun compute(i: Int): Int {
      println("Compute $i")
      return i
    }

    class Properties {
      val atDefinition = compute(1)
      val getter
        get() = compute(2)
      val lazyInit by lazy { compute(3) }
    }

    fun main() {
      println("Properties():")
      val p = Properties()
      println("atDefinition:")
      println(p.atDefinition)
      println(p.atDefinition)
      println("getter:")
      println(p.getter)
      println(p.getter)
      println("lazyInit:")
      println(p.lazyInit)
      println(p.lazyInit)
    }
    /* Output:
    Properties():
    Compute 1
    atDefinition:
    1
    1
    getter:
    Compute 2
    2
    Compute 2
    2
    lazyInit:
    Compute 3
    3
    3
    */
  learner_created: false
status: Unchecked
record: -1
