type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 449
    length: 6
    placeholder_text: TODO()
    initial_state:
      length: 6
      offset: 449
    initialized_from_dependency: false
    possible_answer: |-
      """
        Frog: jump
        Animal: jump
        Frog: talk
        Animal: talk
        """
    selected: false
    status: Unchecked
  text: |-
    package polymorphismExercise2
    import atomictest.*

    private val trace = Trace()

    open class Animal {
      open fun talk() {
        trace("Animal: talk")
      }
      open fun jump() {
        trace("Animal: jump")
        talk()
      }
    }

    class Frog : Animal() {
      override fun talk() {
        trace("Frog: talk")
        super.talk()
      }
      override fun jump() {
        trace("Frog: jump")
        super.jump()
      }
    }

    fun main() {
      val animal: Animal = Frog()
      animal.jump()
      trace eq TODO()
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package polymorphismExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestPolymorphismExercise2 {
        @Test fun testSolution() {
            //TODO: implement your test here
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1
