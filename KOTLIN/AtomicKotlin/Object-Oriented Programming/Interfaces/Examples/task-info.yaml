type: theory
files:
- name: src/Computer.kt
  visible: true
  text: |-
    // Interfaces/Computer.kt
    package interfaces
    import atomictest.*

    interface Computer {
      fun prompt(): String
      fun calculateAnswer(): Int
    }

    class Desktop : Computer {
      override fun prompt() = "Hello!"
      override fun calculateAnswer() = 11
    }

    class DeepThought : Computer {
      override fun prompt() = "Thinking..."
      override fun calculateAnswer() = 42
    }

    class Quantum : Computer {
      override fun prompt() = "Probably..."
      override fun calculateAnswer() = -1
    }

    fun main() {
      val computers = listOf(
        Desktop(), DeepThought(), Quantum()
      )
      computers.map { it.calculateAnswer() } eq
        "[11, 42, -1]"
      computers.map { it.prompt() } eq
        "[Hello!, Thinking..., Probably...]"
    }
  learner_created: false
- name: src/PlayerInterface.kt
  visible: true
  text: |-
    // Interfaces/PlayerInterface.kt
    package propertiesininterfaces
    import atomictest.eq

    interface Player {
      val symbol: Char
    }

    class Food: Player {
      override val symbol = '.'
    }

    class Robot: Player {
      override val symbol get() = 'R'
    }

    class Wall(override val symbol: Char): Player

    fun main() {
      listOf(Food(), Robot(), Wall('|')).map {
        it.symbol
      } eq "[., R, |]"
    }
  learner_created: false
status: Unchecked
record: -1
