type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 105
    length: 66
    placeholder_text: |-
      abstract class Instrument {
        abstract fun play(n: Note): String
      }
    initial_state:
      length: 66
      offset: 105
    initialized_from_dependency: false
    possible_answer: |-
      open class Instrument(val name: String, val action: String) {
        fun play(n: Note): String = "$name $action $n"
      }
    selected: false
    status: Unchecked
  - offset: 173
    length: 75
    placeholder_text: |-
      class Wind : Instrument() {
        override fun play(n: Note) = "Wind blow $n"
      }
    initial_state:
      length: 75
      offset: 173
    initialized_from_dependency: false
    possible_answer: 'class Wind : Instrument("Wind", "blow")'
    selected: false
    status: Unchecked
  - offset: 250
    length: 89
    placeholder_text: |-
      class Percussion : Instrument() {
        override fun play(n: Note) = "Percussion strike $n"
      }
    initial_state:
      length: 89
      offset: 250
    initialized_from_dependency: false
    possible_answer: 'class Percussion : Instrument("Percussion", "strike")'
    selected: false
    status: Unchecked
  - offset: 341
    length: 84
    placeholder_text: |-
      class Stringed : Instrument() {
        override fun play(n: Note) = "Stringed pluck $n"
      }
    initial_state:
      length: 84
      offset: 341
    initialized_from_dependency: false
    possible_answer: 'class Stringed : Instrument("Stringed", "pluck")'
    selected: false
    status: Unchecked
  text: |-
    // Abstract/AbsExercise2.kt
    package abstractClassesExercise2

    enum class Note {
      A, B, C, D, E, F, G
    }

    abstract class Instrument {
      abstract fun play(n: Note): String
    }

    class Wind : Instrument() {
      override fun play(n: Note) = "Wind blow $n"
    }

    class Percussion : Instrument() {
      override fun play(n: Note) = "Percussion strike $n"
    }

    class Stringed : Instrument() {
      override fun play(n: Note) = "Stringed pluck $n"
    }

    fun tune(i: Instrument) = i.play(Note.C)

    fun main() {
      val orchestra = listOf(
        Wind(),
        Percussion(),
        Stringed()
      )
      for (instrument in orchestra) {
        println(tune(instrument))
      }
    }
    /* Output:
    Wind blow C
    Percussion strike C
    Stringed pluck C
     */
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package abstractClassesExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestAbstractClassesExercise2 {
        @Test fun testSolution() {
            //TODO: implement your test here
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1
