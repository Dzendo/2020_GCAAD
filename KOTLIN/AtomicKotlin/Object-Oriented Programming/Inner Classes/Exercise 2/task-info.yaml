type: edu
files:
- name: src/Task.kt
  visible: true
  text: |-
    // InnerClasses/InnerEx2.kt
    package innerClassesExercise2
    import atomictest.eq

    class Box(contains: String, label: String) {
      inner class Contents(val contains: String)
      inner class Destination(val label: String)
      private val contents = Contents(contains)
      private val destination = Destination(label)
      private val x = object : Any() {
        fun f() = "Any-based"
      }
      fun manifest() =
        "${contents.contains}: " +
        "${destination.label} ${x.f()}"
    }

    fun main() {
      Box("Computer", "Tasmania").manifest() eq
        "Computer: Tasmania Any-based"
    }
  learner_created: false
- name: test/Tests.kt
  visible: false
  text: |-
    package innerClassesExercise2

    import org.junit.Test
    import util.unimplementedTest

    class TestInnerClassesExercise2 {
        @Test fun testSolution() {
            //TODO: implement your test here
            unimplementedTest()
        }
    }
  learner_created: false
status: Unchecked
record: -1
