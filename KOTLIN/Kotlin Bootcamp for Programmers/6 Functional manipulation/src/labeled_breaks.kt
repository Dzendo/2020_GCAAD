// 3. Task: Learn about labeled breaks
fun labels() {
    outerLoop@ for (i in 1..100) {
        print("$i ")
        for (j in 1..100) {
            if (i > 10) break@outerLoop  // breaks to outer loop
        }
    }
}

fun main() {
    labels()
}
// 1 2 3 4 5 6 7 8 9 10 11

/*
У Котлина есть несколько способов управления потоком.
Вы уже знакомы с тем return, что возвращается из функции в ее вмещающую функцию.
 Использование это break как return, но для циклов.

Kotlin дает вам дополнительный контроль над циклами с помощью так называемого разрыва.
breakКвалифицировано с меткой переходит к точке выполнения сразу после цикла , отмеченного этой меткой.
Это особенно полезно при работе с вложенными циклами.

Любое выражение в Kotlin может быть помечено меткой. Метки имеют форму идентификатора, за которым следует @знак.

Точно так же вы можете использовать помеченные continue.
Вместо выхода из помеченного цикла, помеченное продолжение переходит к следующей итерации цикла.

Примечание: помеченный разрыв в Kotlin может использоваться только для выхода из циклов,
в отличие от gotoC ++ или C #.
 */